{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\iphone-calculator\\\\src\\\\Components\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Display from \"./Display\";\nimport Keypad from \"./Keypad\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  const clearLastDigit = () => {\n    if (screenValue !== \"0\") if (screenValue.length > 1) setScreenValue(\"0\");else {\n      setScreenValue(screenValue.substring(0, screenValue.length - 1));\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Backspace\") {\n      e.preventDefault();\n      clearLastDigit();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [screenValue]);\n  const [accValue, setAccValue] = useState(null);\n  const [screenValue, setScreenValue] = useState(\"0\");\n  const [currentOperator, setCurrentOperator] = useState(null);\n  const [expectsOperand, setExpectsOperand] = useState(false);\n  const allClear = () => {\n    setAccValue(null);\n    setScreenValue(\"0\");\n    setCurrentOperator(null);\n    setExpectsOperand(false);\n  };\n  const clearScreen = () => {\n    setScreenValue(\"0\");\n  };\n  const isScreenClear = screenValue === \"0\";\n  const reverseSign = () => {\n    setScreenValue(String(-parseFloat(screenValue)));\n  };\n  const percentage = () => {\n    setScreenValue(String(parseFloat(screenValue) / 100));\n  };\n  const addDecimalPoint = () => {\n    if (expectsOperand) {\n      setScreenValue(\"0.\");\n    } else {\n      if (!screenValue.includes(\".\")) setScreenValue(screenValue + \".\");\n    }\n    setExpectsOperand(false);\n  };\n  const handleActionToPerform = (value, keyType) => {\n    const handleClickFunctionKey = value => {\n      switch (value) {\n        case \"AC\":\n          allClear();\n          break;\n        case \"C\":\n          clearScreen();\n          break;\n        case \"+/-\":\n          reverseSign();\n          break;\n        case \"%\":\n          percentage();\n          break;\n        case \".\":\n          addDecimalPoint();\n          break;\n      }\n    };\n    switch (keyType) {\n      case \"fx\":\n        handleClickFunctionKey(value);\n        break;\n      case \"numeric\":\n        handleClickNumericKey(value);\n        break;\n      case \"operator\":\n        handleClickOperator(value);\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calculator-view\",\n    className: \"flex column jc-center ai-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"viewport\",\n      className: \"flex column jc-sp-between ai-center\",\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        value: screenValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Keypad, {\n        actionToPerform: handleActionToPerform,\n        allClear: isScreenClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"GkU5Oykr3Im/qbt1jT49FsusBn8=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useEffect","useState","Display","Keypad","jsxDEV","_jsxDEV","Calculator","_s","clearLastDigit","screenValue","length","setScreenValue","substring","handleKeyDown","e","key","preventDefault","document","addEventListener","removeEventListener","accValue","setAccValue","currentOperator","setCurrentOperator","expectsOperand","setExpectsOperand","allClear","clearScreen","isScreenClear","reverseSign","String","parseFloat","percentage","addDecimalPoint","includes","handleActionToPerform","value","keyType","handleClickFunctionKey","handleClickNumericKey","handleClickOperator","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","actionToPerform","_c","$RefreshReg$"],"sources":["D:/REACT/iphone-calculator/src/Components/Calculator.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Display from \"./Display\";\nimport Keypad from \"./Keypad\";\n\nconst Calculator = () => {\n  const clearLastDigit = () => {\n    if (screenValue !== \"0\")\n      if (screenValue.length > 1) setScreenValue(\"0\");\n      else {\n        setScreenValue(screenValue.substring(0, screenValue.length - 1));\n      }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Backspace\") {\n      e.preventDefault();\n      clearLastDigit();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [screenValue]);\n\n  const [accValue, setAccValue] = useState(null);\n  const [screenValue, setScreenValue] = useState(\"0\");\n  const [currentOperator, setCurrentOperator] = useState(null);\n  const [expectsOperand, setExpectsOperand] = useState(false);\n\n  const allClear = () => {\n    setAccValue(null);\n    setScreenValue(\"0\");\n    setCurrentOperator(null);\n    setExpectsOperand(false);\n  };\n\n  const clearScreen = () => {\n    setScreenValue(\"0\");\n  };\n\n  const isScreenClear = screenValue === \"0\";\n\n  const reverseSign = () => {\n    setScreenValue(String(-parseFloat(screenValue)));\n  };\n\n  const percentage = () => {\n    setScreenValue(String(parseFloat(screenValue) / 100));\n  };\n\n  const addDecimalPoint = () => {\n    if (expectsOperand) {\n      setScreenValue(\"0.\");\n    } else {\n      if (!screenValue.includes(\".\")) setScreenValue(screenValue + \".\");\n    }\n    setExpectsOperand(false);\n  };\n\n  const handleActionToPerform = (value, keyType) => {\n    const handleClickFunctionKey = (value) => {\n      switch (value) {\n        case \"AC\":\n          allClear();\n          break;\n        case \"C\":\n          clearScreen();\n          break;\n        case \"+/-\":\n          reverseSign();\n          break;\n        case \"%\":\n          percentage();\n          break;\n        case \".\":\n          addDecimalPoint();\n          break;\n      }\n    };\n\n    switch (keyType) {\n      case \"fx\":\n        handleClickFunctionKey(value);\n        break;\n      case \"numeric\":\n        handleClickNumericKey(value);\n        break;\n      case \"operator\":\n        handleClickOperator(value);\n        break;\n    }\n  };\n\n  return (\n    <div id=\"calculator-view\" className={\"flex column jc-center ai-center\"}>\n      <div id=\"viewport\" className={\"flex column jc-sp-between ai-center\"}>\n        <Display value={screenValue} />\n        <Keypad\n          actionToPerform={handleActionToPerform}\n          allClear={isScreenClear}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}